<controls:MyWindow x:Class="ClassIsland.Views.WallpaperPreviewWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClassIsland.Views"
        xmlns:controls="clr-namespace:ClassIsland.Controls"
        mc:Ignorable="d"
        Icon="/Assets/AppLogo.ico"
        Title="壁纸提取结果预览" Height="450" Width="800"
        WindowStartupLocation="CenterOwner"
        d:DataContext="{d:DesignInstance local:WallpaperPreviewWindow}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{StaticResource HarmonyOsSans}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="14"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"   >
    <Grid>
        <Image Source="{Binding WallpaperPickingService.WallpaperImage, Mode=OneWay}"
               Stretch="Uniform"
               RenderOptions.BitmapScalingMode="HighQuality"
               StretchDirection="Both"/>
        <Grid HorizontalAlignment="Stretch"
              VerticalAlignment="Bottom"
              IsEnabled="{Binding WallpaperPickingService.IsWorking, Mode=OneWay, Converter={StaticResource BooleanToBooleanReConverter}}">
            <Border Background="{DynamicResource MaterialDesignPaper}"
                    Opacity="0.75"/>
            <Button Style="{StaticResource MaterialDesignFlatButton}"
                    Click="ButtonRefresh_OnClick"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    Margin="8">
                <controls:IconText Kind="Refresh" Text="刷新" />
            </Button>
        </Grid>
        <Grid Visibility="{Binding WallpaperPickingService.IsWorking, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border Background="{DynamicResource MaterialDesignPaper}"
                    Opacity="0.8"/>
            <controls:StarRailLoadingControl VerticalAlignment="Center"
                                             HorizontalAlignment="Center"/>
        </Grid>

        <!-- Loading -->
        <Border Grid.Row="0"
                Margin="-1"
                Padding="1"
                d:Visibility="Visible"
                Cursor="Wait"
                x:Name="LoadingOverlay"
                Background="{DynamicResource MaterialDesignPaper}">
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Style>
            </Border.Style>
            <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Right"
                        Margin="0 0 36 24">
                <controls:TeyvatLoadingControl/>
            </StackPanel>
        </Border>
    </Grid>
</controls:MyWindow>
