<Window x:Class="ClassIsland.Views.ProfileSettingsWindow"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ClassIsland.Views"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:models="clr-namespace:ClassIsland.Models"
      xmlns:controls="clr-namespace:ClassIsland.Controls"
      xmlns:generic="clr-namespace:System.Collections.Generic;assembly=System.Runtime"
      xmlns:converters="clr-namespace:ClassIsland.Converters"
      xmlns:dd="urn:gong-wpf-dragdrop"
      xmlns:validations="clr-namespace:ClassIsland.Validations"
      xmlns:system="clr-namespace:System;assembly=System.Runtime"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      TextElement.Foreground="{DynamicResource MaterialDesignBody}"
      Background="{DynamicResource MaterialDesignPaper}"
      TextElement.FontWeight="Medium"
      TextElement.FontSize="14"
      FontFamily="{StaticResource HarmonyOsSans}"
      Title="档案编辑"
      d:DataContext="{d:DesignInstance local:ProfileSettingsWindow}"
      Icon="/Assets/AppLogo.ico"
      Closing="ProfileSettingsWindow_OnClosing">
    <Window.Resources>
        <converters:KeyValuePairToValueConverter x:Key="KeyValuePairToValueConverter" />
        <models:TimeLayoutItem x:Key="TimeLayoutItemFallback"/>
        <converters:DictionaryValueAccessConverter x:Key="DictionaryValueAccessConverter"/>
        <converters:ClassPlanDictionaryValueAccessConverter x:Key="ClassPlanDictionaryValueAccessConverter"/>
        <Style BasedOn="{StaticResource MaterialDesignDataGridComboBox}" TargetType="{x:Type ComboBox}" x:Key="ClassPlanDataGridComboBoxStyle">
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding Mode=OneWay, Converter={StaticResource DictionaryValueAccessConverter}}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 时间表信息 -->
        <StackPanel Margin="16" Width="300" x:Key="TimeLayoutInfoEditor" 
                    DataContext="{Binding SelectedItem, ElementName=ListViewTimeLayouts}">
            <TextBlock Text="时间表信息" Style="{StaticResource MaterialDesignHeadline5TextBlock}"/>
            <TextBox Style="{StaticResource MaterialDesignOutlinedTextBox}"
                     Margin="0 12 0 0"
                     Text="{Binding Value.Name}"
                     materialDesign:HintAssist.Hint="名称"/>
            <StackPanel Orientation="Horizontal" Margin="0 16 0 0">
                <materialDesign:PackIcon Kind="Code" VerticalAlignment="Center" 
                                         Margin="0 0 3 0"/>
                <TextBlock VerticalAlignment="Center" TextWrapping="Wrap"
                           Text="{Binding Key, Mode=OneWay}">
                </TextBlock>
            </StackPanel>
        </StackPanel>

        <!-- 时间节点编辑 -->
        <StackPanel Margin="16" Width="300" x:Key="TimePointEditor" >
            <TextBlock Text="编辑时间点" Style="{StaticResource MaterialDesignHeadline5TextBlock}"/>
            <!--<TextBlock Text="{Binding}"/>-->
            <materialDesign:TimePicker materialDesign:HintAssist.Hint="开始时间" Margin="0 12 0 0"
                                       WithSeconds="True" Is24Hours="True"
                                       Style="{StaticResource MaterialDesignOutlinedTimePicker}"
                                       SelectedTime="{Binding ViewModel.SelectedTimePoint.StartSecond}"/>
            <materialDesign:TimePicker materialDesign:HintAssist.Hint="结束时间" Margin="0 12 0 0"
                                       WithSeconds="True" Is24Hours="True"
                                       Style="{StaticResource MaterialDesignOutlinedTimePicker}"
                                       SelectedTime="{Binding ViewModel.SelectedTimePoint.EndSecond}" />
            <TextBlock Text="类型" Margin="0 16 0 0"/>
            <ListBox Style="{StaticResource MaterialDesignChoiceChipPrimaryOutlineListBox}"
                     SelectedIndex="{Binding ViewModel.SelectedTimePoint.TimeType}">
                <ListBoxItem>
                    <controls:IconText Kind="BookOutline" Text="上课"/>
                </ListBoxItem>
                <ListBoxItem>
                    <controls:IconText Kind="ClockOutline" Text="课间休息"/>
                </ListBoxItem>
                <ListBoxItem>
                    <controls:IconText Kind="ArrowSplitHorizontal" Text="分割线"/>
                </ListBoxItem>
            </ListBox>

        </StackPanel>

        <!-- 删除时间表确认 -->
        <StackPanel x:Key="DeleteTimeLayoutConfirm" VerticalAlignment="Stretch" Margin="16" MaxWidth="400">
            <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}">
                <Run Text="删除"/>
                <Run Text="{Binding SelectedItem.Value.Name, ElementName=ListViewTimeLayouts}"/>
            </TextBlock>
            <TextBlock Margin="0 6 0 0" TextWrapping="Wrap">
                <Run Text="确定要删除时间表"/>
                <Run Text="{Binding SelectedItem.Value.Name, ElementName=ListViewTimeLayouts}"/>
                <Run Text="吗？如果有与此时间表关联的课程表，那么这些课程表在时间表删除后将无法正常工作！"/>
            </TextBlock>
            <StackPanel Orientation="Horizontal" Margin="0 8 0 0" HorizontalAlignment="Right">
                <Button Content="删除" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" >
                    <Button.CommandParameter>
                        <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                            True
                        </system:Boolean>
                    </Button.CommandParameter>
                </Button>
                <Button Content="取消" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="6 0 0 0">
                    <Button.CommandParameter>
                        <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                            False
                        </system:Boolean>
                    </Button.CommandParameter>
                </Button>
            </StackPanel>
        </StackPanel>

        <!-- 删除科目确认 -->
        <StackPanel x:Key="DeleteSubjectConfirm" VerticalAlignment="Stretch" Margin="16" MaxWidth="400">
            <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}">
                <Run Text="删除"/>
                <Run Text="{Binding SelectedItem.Value.Name, ElementName=ListViewSubjects}"/>
            </TextBlock>
            <TextBlock Margin="0 6 0 0" TextWrapping="Wrap">
                <Run Text="确定要删除科目"/>
                <Run Text="{Binding SelectedItem.Value.Name, ElementName=ListViewSubjects}"/>
                <Run Text="吗？如果有包含此科目的课程表，那么这些课程表在科目删除后将无法正常工作！"/>
            </TextBlock>
            <StackPanel Orientation="Horizontal" Margin="0 8 0 0" HorizontalAlignment="Right">
                <Button Content="删除" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" >
                    <Button.CommandParameter>
                        <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                            True
                        </system:Boolean>
                    </Button.CommandParameter>
                </Button>
                <Button Content="取消" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="6 0 0 0">
                    <Button.CommandParameter>
                        <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                            False
                        </system:Boolean>
                    </Button.CommandParameter>
                </Button>
            </StackPanel>
        </StackPanel>

        <!-- 删除课表确认 -->
        <StackPanel x:Key="DeleteClassPlanConfirm" VerticalAlignment="Stretch" Margin="16" MaxWidth="400">
            <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}">
                <Run Text="删除"/>
                <Run Text="{Binding SelectedItem.Value.Name, ElementName=ListViewClassPlans}"/>
            </TextBlock>
            <TextBlock Margin="0 6 0 0" TextWrapping="Wrap">
                <Run Text="确定要删除课表"/>
                <Run Text="{Binding SelectedItem.Value.Name, ElementName=ListViewClassPlans}"/>
                <Run Text="吗？"/>
            </TextBlock>
            <StackPanel Orientation="Horizontal" Margin="0 8 0 0" HorizontalAlignment="Right">
                <Button Content="删除" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" >
                    <Button.CommandParameter>
                        <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                            True
                        </system:Boolean>
                    </Button.CommandParameter>
                </Button>
                <Button Content="取消" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="6 0 0 0">
                    <Button.CommandParameter>
                        <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                            False
                        </system:Boolean>
                    </Button.CommandParameter>
                </Button>
            </StackPanel>
        </StackPanel>

        <!-- 课程表信息 -->
        <ScrollViewer x:Key="ClassPlansInfoEditor" Width="300"
                      Margin="16"
                      VerticalScrollBarVisibility="Auto">
            <StackPanel DataContext="{Binding SelectedItem, ElementName=ListViewClassPlans}">
                <TextBlock Text="课程表信息" Style="{StaticResource MaterialDesignHeadline5TextBlock}" />
                <TextBox Style="{StaticResource MaterialDesignOutlinedTextBox}"
                         Margin="0 12 0 0"
                         Text="{Binding Value.Name}"
                         materialDesign:HintAssist.Hint="名称" />
                <ComboBox Style="{StaticResource MaterialDesignOutlinedComboBox}"
                          x:Name="ComboBox1"
                          Margin="0 12 0 0"
                          materialDesign:HintAssist.Hint="时间表"
                          IsEnabled="{Binding Value.IsActivated, Converter={StaticResource BooleanToBooleanReConverter}, Mode=OneWay}"
                          SelectedItem="{Binding Value.TimeLayoutId, Converter={StaticResource ClassPlanDictionaryValueAccessConverter}}"
                          ItemsSource="{Binding MainViewModel.Profile.TimeLayouts, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ProfileSettingsWindow}}}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Value.Name}"
                                       ToolTip="{Binding Key}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBlock Text="部分设置在课表处于活动状态下无法修改。" Margin="0 16 0 0" Visibility="{Binding Value.IsActivated, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <StackPanel DataContext="{Binding SelectedItem.Value.TimeRule, ElementName=ListViewClassPlans}"
                            Margin="0 12 0 0">
                    <TextBlock Text="触发规则" Style="{StaticResource MaterialDesignHeadline6TextBlock}" />
                    <!--<TextBlock Text="{Binding}"/>-->
                    <TextBlock Text="课表只有在规则全部满足时才会生效。" TextWrapping="Wrap" Margin="0 6 0 0" />

                    <TextBlock Text="当今天是：" Margin="0 16 0 0" />
                    <ListBox Style="{StaticResource MaterialDesignChoiceChipPrimaryOutlineListBox}"
                             SelectedIndex="{Binding WeekDay}">
                        <ListBoxItem Content="周日" />
                        <ListBoxItem Content="周一" />
                        <ListBoxItem Content="周二" />
                        <ListBoxItem Content="周三" />
                        <ListBoxItem Content="周四" />
                        <ListBoxItem Content="周五" />
                        <ListBoxItem Content="周六" />
                    </ListBox>

                    <TextBlock Text="当本周是：" Margin="0 16 0 0" />
                    <ListBox Style="{StaticResource MaterialDesignChoiceChipPrimaryOutlineListBox}"
                             SelectedIndex="{Binding WeekCountDiv}">
                        <ListBoxItem Content="不限" />
                        <ListBoxItem Content="单周" />
                        <ListBoxItem Content="双周" />
                    </ListBox>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>

        <!-- 课程表规则编辑 -->
        <StackPanel Margin="16" Width="300" x:Key="ClassPlanRulesEditor">
            <TextBlock Text="Deprecated."/>
        </StackPanel>

        <!-- 课程表规则编辑 -->
        <StackPanel Margin="16" Width="300" x:Key="TemporaryClassPlan">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0">
                    <TextBlock Text="临时课表" Style="{StaticResource MaterialDesignHeadline5TextBlock}"/>
                    <TextBlock Text="若当天授课计划有变，可临时选择某一课表作为当天的课表。该设置仅在当天的本次运行有效。" TextWrapping="Wrap"
                               Margin="0 6 0 0"/>
                    <Button Style="{StaticResource MaterialDesignFlatButton}" 
                            HorizontalAlignment="Left"
                            ToolTip="清除选择的临时课表，并恢复至正常课表安排。"
                            Margin="0 6 0 0"
                            Click="ButtonClearTemporaryClassPlan_OnClick">
                        <controls:IconText Kind="ClearOutline" Text="清除临时课表"/>
                    </Button>
                </StackPanel>
                <ListBox Grid.Row="1" ItemsSource="{Binding MainViewModel.Profile.ClassPlans}"
                         Margin="0 12 0 0"
                         SelectionMode="Single"
                         SelectedValue="{Binding MainViewModel.TemporaryClassPlan, Mode=TwoWay}"
                         SelectionChanged="ListBoxTempClassPlanSelector_OnSelectionChanged"
                         HorizontalContentAlignment="Stretch"
                         VerticalContentAlignment="Stretch">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}"
                                      Content="{Binding Value.Name}"
                                      HorizontalAlignment="Stretch"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </StackPanel>

        <!-- 新建档案 -->
        <StackPanel x:Key="CreateProfileDialog" VerticalAlignment="Stretch" Margin="16" MaxWidth="400">
            <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}" Text="新建档案"/>
            <TextBox Margin="0 6 0 0" TextWrapping="Wrap" x:Name="TextBoxProfileName" 
                     Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                     Text="{Binding ViewModel.CreateProfileName}"
                     materialDesign:HintAssist.Hint="档案名"
                     materialDesign:TextFieldAssist.SuffixText=".json"/>
            <StackPanel Orientation="Horizontal" Margin="0 8 0 0" HorizontalAlignment="Right">
                <Button Content="新建" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" 
                        CommandParameter="{Binding ViewModel.CreateProfileName, Mode=OneWay}"/>
                <Button Content="取消" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="6 0 0 0" CommandParameter="{x:Null}"/>
            </StackPanel>
        </StackPanel>

        <!-- 重命名档案 -->
        <StackPanel x:Key="RenameProfileDialog" VerticalAlignment="Stretch" Margin="16" MaxWidth="400">
            <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}" Text="重命名档案"/>
            <TextBox Margin="0 6 0 0" TextWrapping="Wrap"
                     Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                     Text="{Binding ViewModel.RenameProfileName}"
                     materialDesign:HintAssist.Hint="档案名"
                     materialDesign:TextFieldAssist.SuffixText=".json"/>
            <StackPanel Orientation="Horizontal" Margin="0 8 0 0" HorizontalAlignment="Right">
                <Button Content="重命名" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" 
                        CommandParameter="{Binding ViewModel.RenameProfileName, Mode=OneWay}"/>
                <Button Content="取消" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="6 0 0 0" CommandParameter="{x:Null}"/>
            </StackPanel>
        </StackPanel>

        <!-- 删除档案 -->
        <converters:StringConnectConverter x:Key="StringConnectConverter" />
        <StackPanel x:Key="DeleteProfileDialog" VerticalAlignment="Stretch" Margin="16" MaxWidth="400">
            <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}" Text="删除档案"/>
            <TextBlock TextWrapping="Wrap" Margin="0 12 0 0">
                <Run Text="你确定要删除这个档案吗？一旦删除，这个操作将无法撤销，该档案的所有数据都将丢失！"/>
            </TextBlock>
            <controls:IconText Text="{Binding ViewModel.SelectedProfile}" HorizontalAlignment="Center"
                               Margin="0 6 0 0"
                               Kind="FileDocumentOutline"
                               FontFamily="Consolas"/>
            <StackPanel Orientation="Horizontal" Margin="0 8 0 0" HorizontalAlignment="Right">
                <Grid HorizontalAlignment="Right">
                    <Button Content="删除" 
                            Style="{DynamicResource MaterialDesignFlatButton}" 
                            Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                        <Button.CommandParameter>
                            <system:Boolean>
                                True
                            </system:Boolean>
                        </Button.CommandParameter>
                    </Button>
                </Grid>
                <Button Content="取消" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="6 0 0 0" CommandParameter="{x:Null}"/>
            </StackPanel>
        </StackPanel>

        <!-- 管理档案 -->
        <Grid x:Key="ProfileManager" Margin="16" Width="300">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" >
                <TextBlock Text="管理档案" Style="{StaticResource MaterialDesignHeadline5TextBlock}"/>
                <TextBlock Text="管理与切换保存的档案。切换档案需要重新启动应用。" TextWrapping="Wrap"
                           Margin="0 6 0 0"/>
                <!--<TextBlock Text="{Binding MainViewModel.Settings.SelectedProfile, Mode=OneWay}"/>-->
                <WrapPanel Margin="0 6 0 0">
                    <WrapPanel.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                            <Setter Property="Margin" Value="0 0 6 0"/>
                        </Style>
                    </WrapPanel.Resources>
                    <Button ToolTip="新建档案。" Click="ButtonCreateProfile_OnClick">
                        <controls:IconText Kind="FileDocumentAddOutline" Text="新建档案"/>
                    </Button>
                    <Button ToolTip="打开档案文件夹。" Click="ButtonOpenProfileFolder_OnClick">
                        <controls:IconText Kind="FolderOpenOutline" Text="打开文件夹"/>
                    </Button>
                    <Button ToolTip="重新加载档案列表。" Click="ButtonRefreshProfiles_OnClick">
                        <controls:IconText Kind="Refresh" Text="刷新"/>
                    </Button>
                </WrapPanel>
            </StackPanel>
            <ListBox Grid.Row="1" Margin="0 12 0 0"
                     SelectedValue="{Binding ViewModel.SelectedProfile, Mode=TwoWay}"
                     SelectionMode="Single"
                     HorizontalContentAlignment="Stretch"
                     ItemsSource="{Binding ViewModel.Profiles, Mode=OneWay}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Background="Transparent">
                            <StackPanel.ContextMenu>
                                <ContextMenu FontFamily="{StaticResource HarmonyOsSans}">
                                    <MenuItem Icon="{materialDesign:PackIcon FileDocumentEditOutline}" Header="编辑" Click="MenuItemProfileEdit_OnClick"/>
                                    <Separator/>
                                    <MenuItem Icon="{materialDesign:PackIcon RenameOutline}" Header="重命名" Click="MenuItemRenameProfile_OnClick"/>
                                    <MenuItem Icon="{materialDesign:PackIcon ContentCopy}" Header="复制" Click="MenuItemProfileDuplicate_OnClick"/>
                                    <!--<MenuItem Icon="{materialDesign:PackIcon FileExportOutline}" Header="导出"/>-->
                                    <MenuItem Icon="{materialDesign:PackIcon DeleteOutline}" Header="删除" Click="MenuItemDeleteProfile_OnClick"/>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                            <StackPanel.Resources>
                                <converters:StringToRadioButtonSelectionConverter x:Key="StringToRadioButtonSelectionConverter" />
                            </StackPanel.Resources>
                            <RadioButton GroupName="ProfileSelection" VerticalAlignment="Center">
                                <RadioButton.IsChecked>
                                    <MultiBinding Converter="{StaticResource StringToRadioButtonSelectionConverter}">
                                        <Binding Path="MainViewModel.Settings.SelectedProfile" 
                                                 RelativeSource="{RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}"/>
                                        <Binding Mode="OneWay"/>
                                    </MultiBinding>
                                </RadioButton.IsChecked>
                            </RadioButton>
                            <TextBlock Text="{Binding}" VerticalAlignment="Center" Margin="6 0 0 0"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <materialDesign:Snackbar Grid.Row="0" Grid.RowSpan="2" 
                                     IsActive="{Binding ViewModel.IsRestartSnackbarActive, Mode=OneWay}"
                                     Margin="0 0 0 -16"
                                     ActionButtonPlacement="Inline">
                <materialDesign:SnackbarMessage
                    ActionContent="重启"
                    ActionClick="SnackbarRestartMessage_OnActionClick"
                    Content="切换档案需要重启应用程序。" />
            </materialDesign:Snackbar>
        </Grid>

    </Window.Resources>
    <materialDesign:DialogHost Identifier="{Binding ViewModel.DialogHostId, Mode=OneWay}">
        <materialDesign:DrawerHost RightDrawerContent="{Binding ViewModel.DrawerContent, Mode=OneWay}"
                                   DrawerClosing="DrawerHost_OnDrawerClosing"
                                   x:Name="MyDrawerHost">
            <!-- Content -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <!-- Main -->
                <TabControl Grid.Row="1" TabStripPlacement="Left" SelectionChanged="TabControlSelector_OnSelectionChanged">
                    <!-- 课表 -->
                    <TabItem Header="课表">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <!-- 课表选择 -->
                            <Grid Grid.Column="0" Margin="0 0 3 0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <!-- 课表操作 -->
                                <ToolBar Grid.Row="0" ToolBarTray.IsLocked="True">
                                    <Button Click="ButtonAddClassPlan_OnClick" ToolTip="新建课表。"
                                            Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}">
                                        <controls:IconText Kind="Add" Text="添加"/>
                                    </Button>
                                    <Button Click="ButtonDuplicateClassPlan_OnClick" ToolTip="复制选中的课表。"
                                            Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=ListViewClassPlans}" Value="-1">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <controls:IconText Kind="ContentCopy" Text="复制"/>
                                    </Button>
                                    <Button ToolTip="临时启用某个课表。" Click="ButtonTemporaryClassPlan_OnClick"
                                            Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}">
                                        <controls:IconText Kind="FileChartOutline" Text="临时课表"/>
                                    </Button>
                                </ToolBar>

                                <!-- 课表 -->
                                <ListView Grid.Row="1" Margin="12"
                                          SelectionChanged="ListViewClassPlans_OnSelectionChanged"
                                          SelectionMode="Single"
                                          ItemsSource="{Binding MainViewModel.Profile.ClassPlans, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          x:Name="ListViewClassPlans">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <!-- Icon -->
                                                <materialDesign:PackIcon Grid.Column="0" Grid.Row="0" Margin="0 0 6 0" 
                                                                         Kind="FileChartOutline"/>

                                                <!-- Name -->
                                                <TextBlock Grid.Column="1" Grid.Row="0" FontSize="16" Text="{Binding Value.Name}"
                                                           ToolTip="课表名称" HorizontalAlignment="Left"/>

                                                <!-- Info -->
                                                <WrapPanel Grid.Column="1" Grid.Row="1" Margin="0 4 0 0">
                                                    <controls:IconText Kind="ClockOutline" Text="{Binding Value.TimeLayout.Name}" ToolTip="时间表" IconMargin="3"/>
                                                </WrapPanel>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Grid>

                            <!-- 课表编辑 -->
                            <Grid Grid.Column="1" Margin="3 0 0 0" 
                                  DataContext="{Binding SelectedItem.Value, ElementName=ListViewClassPlans}">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedItem, ElementName=ListViewClassPlans}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </Style>
                                </Grid.Style>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!-- 课表编辑操作 -->
                                <ToolBar Grid.Row="0" ToolBarTray.IsLocked="True">
                                    <!--<Button Click="ButtonDebugAddNewClass_OnClick">
                                        <controls:IconText Kind="Add" Text="DebugAddNew"/>
                                    </Button>-->
                                    <Button Click="ButtonClassPlanInfoEdit_OnClick" ToolTip="查看并编辑课表的基本信息。"
                                            Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}">
                                        <controls:IconText Kind="InfoOutline" Text="课表信息"/>
                                    </Button>
                                    <Separator/>
                                    <Button Click="ButtonDeleteClassPlan_OnClick" ToolTip="删除该课表。">
                                        <controls:IconText Kind="Delete" Text="删除课表"/>
                                    </Button>
                                </ToolBar>

                                <!-- 课表编辑 -->
                                <Grid Grid.Row="1">
                                    <DataGrid AutoGenerateColumns="False" 
                                              ItemsSource="{Binding Classes}" 
                                              CanUserAddRows="False" 
                                              CanUserSortColumns="False"
                                              RowHeaderWidth="150"
                                              x:Name="DataGridClassPlans"
                                              UnloadingRow="DataGridClassPlans_OnUnloadingRow"
                                              BeginningEdit="DataGridClassPlans_OnBeginningEdit"
                                              CellEditEnding="DataGridClassPlans_OnCellEditEnding">
                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn Header="时间" IsReadOnly="True">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock>
                                                            <Run Text="{Binding CurrentTimeLayoutItem.StartSecond, StringFormat={}{0:HH:mm:ss}}"/>
                                                            <Run Text="-"/>
                                                            <Run Text="{Binding CurrentTimeLayoutItem.EndSecond, StringFormat={}{0:HH:mm:ss}}"/>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <materialDesign:DataGridComboBoxColumn Header="科目"
                                                                                   ItemsSourceBinding="{Binding MainViewModel.Profile.Subjects.Keys, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ProfileSettingsWindow}}, UpdateSourceTrigger=PropertyChanged}"
                                                                                   SelectedValueBinding="{Binding SubjectId}"
                                                                                   ElementStyle="{StaticResource ClassPlanDataGridComboBoxStyle}"
                                                                                   EditingElementStyle="{StaticResource ClassPlanDataGridComboBoxStyle}"/>
                                        </DataGrid.Columns>
                                    </DataGrid>

                                    <!-- 关闭前警告 -->
                                </Grid>
                                <materialDesign:ColorZone Grid.Row="2" Background="Yellow" 
                                                          HorizontalAlignment="Stretch" 
                                                          Visibility="{Binding ViewModel.IsClassPlansEditing, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ProfileSettingsWindow}, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                                                          Mode="Light">
                                    <controls:IconText Kind="Warning" Text="正在编辑课表。若要关闭窗口，请先完成课表编辑。" Margin="6"/>
                                </materialDesign:ColorZone>
                            </Grid>
                        </Grid>
                    </TabItem>

                    <!-- 时间表 -->
                    <TabItem Header="时间表">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <!-- 时间表选择 -->
                            <Grid Grid.Column="0" Margin="0 0 3 0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <!-- 时间表操作 -->
                                <ToolBar Grid.Row="0" ToolBarTray.IsLocked="True">
                                    <Button Click="ButtonAddTimeLayout_OnClick" ToolTip="新建时间表。"
                                            Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}">
                                        <controls:IconText Kind="Add" Text="添加"/>
                                    </Button>
                                    <Button Click="ButtonDuplicateTimeLayout_OnClick" ToolTip="复制选中的时间表。"
                                            Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=ListViewTimeLayouts}" Value="-1">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <controls:IconText Kind="ContentCopy" Text="复制"/>
                                    </Button>
                                </ToolBar>

                                <!-- 时间表 -->
                                <ListView Grid.Row="1" Margin="12"
                                          SelectionMode="Single"
                                          ItemsSource="{Binding MainViewModel.Profile.TimeLayouts, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                          x:Name="ListViewTimeLayouts">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Value.Name}"/>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Grid>

                            <!-- 时间节点编辑 -->
                            <Grid Grid.Column="1" Margin="3 0 0 0" 
                                  DataContext="{Binding SelectedItem.Value, ElementName=ListViewTimeLayouts}">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedItem, ElementName=ListViewTimeLayouts}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </Style>
                                </Grid.Style>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <!-- 时间表编辑操作 -->
                                <ToolBar Grid.Row="0" ToolBarTray.IsLocked="True" 
                                         IsEnabled="{Binding IsActivated, Converter={StaticResource BooleanToBooleanReConverter}}">
                                    <!--<TextBlock Text="{Binding Layouts}"/>-->
                                    <Button Click="ButtonAddClassTime_OnClick" ToolTip="添加上课时间点。">
                                        <controls:IconText Kind="NotePlusOutline" Text="上课"/>
                                    </Button>
                                    <Button Click="ButtonAddBreakTime_OnClick" ToolTip="添加课间休息时间点。">
                                        <controls:IconText Kind="ClockPlusOutline" Text="课间"/>
                                    </Button>
                                    <Button Click="ButtonAddSeparator_OnClick" ToolTip="添加分割线。">
                                        <controls:IconText Kind="Add" Text="分割线"/>
                                    </Button>
                                    <Separator/>
                                    <Button Click="ButtonRemoveTimePoint_OnClick" ToolTip="删除选中的时间点。">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=ListViewTimePoints}" Value="-1">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <controls:IconText Kind="Remove" Text="删除"/>
                                    </Button>
                                    <Button Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}" 
                                            Click="ButtonEditTimePoint_OnClick"
                                            ToolTip="编辑选中的时间点。">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=ListViewTimePoints}" Value="-1">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <controls:IconText Kind="EditOutline" Text="编辑"/>
                                    </Button>
                                    <Separator/>
                                    <Button Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                                            Click="ButtonEditTimeLayoutInfo_OnClick"
                                            ToolTip="查看并编辑时间表的基本信息。">
                                        <controls:IconText Kind="InfoOutline" Text="时间表信息"/>
                                    </Button>
                                    <Button Click="ButtonDeleteTimeLayout_OnClick"
                                            ToolTip="删除该时间表。">
                                        <controls:IconText Kind="Delete" Text="删除时间表"/>
                                    </Button>
                                </ToolBar>

                                <!-- 时间点 -->
                                <ListView Grid.Row="1" Margin="12"
                                          SelectionMode="Single"
                                          SelectedItem="{Binding ViewModel.SelectedTimePoint, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}, Mode=TwoWay}"
                                          ItemsSource="{Binding Layouts, Mode=OneWay}" x:Name="ListViewTimePoints">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <!-- Icon -->
                                                <materialDesign:PackIcon Grid.Column="0" Grid.Row="0" Margin="0 0 6 0">
                                                    <materialDesign:PackIcon.Style>
                                                        <Style TargetType="materialDesign:PackIcon">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding TimeType}" Value="0">
                                                                    <Setter Property="Kind" Value="BookOutline"/>
                                                                    <Setter Property="ToolTip" Value="上课时间"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding TimeType}" Value="1">
                                                                    <Setter Property="Kind" Value="ClockOutline"/>
                                                                    <Setter Property="ToolTip" Value="课间休息"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding TimeType}" Value="2">
                                                                    <Setter Property="Kind" Value="ArrowSplitHorizontal"/>
                                                                    <Setter Property="ToolTip" Value="分割线"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </materialDesign:PackIcon.Style>
                                                </materialDesign:PackIcon>

                                                <!-- Time -->
                                                <TextBlock Grid.Column="1" Grid.Row="0" FontSize="14" ToolTip="时间段">
                                                    <Run Text="{Binding StartSecond, ConverterCulture=zh-cn, StringFormat={}{0:HH:mm:ss}}"/>
                                                    <Run Text="-"/>
                                                    <Run Text="{Binding EndSecond, ConverterCulture=zh-cn, StringFormat={}{0:HH:mm:ss}}"/>
                                                </TextBlock>
                                                
                                                <!-- Last Time -->
                                                <controls:IconText Grid.Column="1" Grid.Row="1" Kind="ClockAutoOutline" Text="{Binding Last}" 
                                                                   Margin="0 3 0 0" ToolTip="持续时间"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>

                                <!-- 禁止编辑叠层 -->
                                <Grid Grid.Row="0" Grid.RowSpan="2" Visibility="{Binding IsActivated, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Border Background="{DynamicResource MaterialDesignPaper}" Opacity="0.8"/>
                                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Image Source="/Assets/Forbidden.png" Width="72" Height="72" Margin="0 0 0 8"/>
                                        <TextBlock Text="无法编辑处于活动状态的时间表。"
                                                   VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Grid>
                    </TabItem>

                    <!-- 科目 -->
                    <TabItem Header="科目">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <!-- 科目选择 -->
                            <Grid Grid.Column="0" Margin="0 0 3 0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <!-- 科目操作 -->
                                <ToolBar Grid.Row="0" ToolBarTray.IsLocked="True">
                                    <Button Click="ButtonAddSubject_OnClick" ToolTip="添加科目。">
                                        <controls:IconText Kind="Add" Text="添加"/>
                                    </Button>
                                    <Button Click="ButtonDuplicateSubject_OnClick" ToolTip="复制选中的科目。">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=ListViewSubjects}" Value="-1">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <controls:IconText Kind="ContentCopy" Text="复制"/>
                                    </Button>
                                </ToolBar>

                                <!-- 科目 -->
                                <ListView Grid.Row="1" Margin="12"
                                          SelectionMode="Single"
                                          ItemsSource="{Binding MainViewModel.Profile.Subjects, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                          x:Name="ListViewSubjects">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <!-- Icon -->
                                                <materialDesign:PackIcon Grid.Column="0" Grid.Row="0" Margin="0 0 6 0" 
                                                                         Kind="BookmarkBoxMultipleOutline"/>

                                                <!-- Subject -->
                                                <TextBlock Grid.Column="1" Grid.Row="0" FontSize="16" Text="{Binding Value.Name}"
                                                           ToolTip="科目名" HorizontalAlignment="Left"/>

                                                <!-- Info -->
                                                <WrapPanel Grid.Column="1" Grid.Row="1" Margin="0 4 0 0">
                                                    <controls:IconText Kind="Teacher" Text="{Binding Value.TeacherName}"
                                                                       IconMargin="3 0 0 0" Margin="0 0 6 0"
                                                                       ToolTip="科任老师"/>
                                                    <controls:IconText IconMargin="3 0 0 0" ToolTip="课程类型">
                                                        <controls:IconText.Style>
                                                            <Style TargetType="controls:IconText">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Value.IsOutDoor}" Value="True">
                                                                        <Setter Property="Kind" Value="BasketballHoopOutline"/>
                                                                        <Setter Property="Text" Value="户外课程"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                                <Setter Property="Kind" Value="HumanMaleBoardPoll"/>
                                                                <Setter Property="Text" Value="室内课程"/>
                                                            </Style>
                                                        </controls:IconText.Style>
                                                    </controls:IconText>
                                                </WrapPanel>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Grid>

                            <!-- 科目编辑 -->
                            <Grid Grid.Column="1" Margin="3 0 0 0" 
                                  DataContext="{Binding SelectedItem.Value, ElementName=ListViewSubjects}">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedItem, ElementName=ListViewSubjects}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </Style>
                                </Grid.Style>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <!-- 科目编辑操作 -->
                                <ToolBar Grid.Row="0" ToolBarTray.IsLocked="True">
                                    <Button Click="ButtonSubject_OnClick" ToolTip="删除该科目。">
                                        <controls:IconText Kind="Delete" Text="删除科目"/>
                                    </Button>
                                </ToolBar>

                                <!-- 科目编辑 -->
                                <StackPanel Grid.Row="1" Margin="12">
                                    <!-- 科目名 & 简称 -->
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <!-- 科目名 -->
                                        <TextBox Grid.Column="0" 
                                                 Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                                 materialDesign:HintAssist.Hint="科目名"
                                                 Text="{Binding Name}"/>
                                        <!-- 简称 -->
                                        <TextBox Grid.Column="1" Margin="6 0 0 0"
                                                 Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                                 materialDesign:HintAssist.Hint="简称"
                                                 Text="{Binding Initial}"/>
                                    </Grid>
                                    <!-- 科任老师 -->
                                    <TextBox Margin="0 6 0 0"
                                             Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                             materialDesign:HintAssist.Hint="科任老师"
                                             Text="{Binding TeacherName}"/>
                                    <!-- 户外课程 -->
                                    <CheckBox Margin="0 6 0 0"
                                              Style="{StaticResource MaterialDesignCheckBox}"
                                              IsChecked="{Binding IsOutDoor}"
                                              Content="该科目是户外课程"/>
                                    <!-- Guid -->
                                    <controls:IconText Kind="Code" HorizontalAlignment="Left"
                                                       Text="{Binding SelectedItem.Key, ElementName=ListViewSubjects}" 
                                                       Margin="0 16 0 0" ToolTip="Guid"/>
                                </StackPanel>
                            </Grid>
                        </Grid> 
                    </TabItem>
                    
                </TabControl>
                <!-- 档案操作 -->
                <!--<WrapPanel Grid.Row="0" Margin="4" Orientation="Horizontal">
                    <WrapPanel.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                            <Setter Property="Margin" Value="0 0 6 0"/>
                        </Style>
                    </WrapPanel.Resources>
                    <controls:IconText Kind="FileDocumentOutline" Text="{Binding MainViewModel.CurrentProfilePath}"
                                       Margin="0 0 6 0"
                                       ToolTip="当前加载的档案。"/>
                </WrapPanel>-->
                <!-- AppBar -->
                <materialDesign:ColorZone Grid.Row="0" Padding="16" Mode="PrimaryMid"
                                          materialDesign:ElevationAssist.Elevation="Dp4">
                    <Grid Margin="4 0 4 0">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <TextBlock Text="档案编辑" Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" Margin="0,0,20,0"/>
                            <controls:IconText Kind="FileDocumentOutline" Text="{Binding MainViewModel.CurrentProfilePath}"
                                               Margin="0 0 8 0"
                                               VerticalAlignment="Center"
                                               ToolTip="当前加载的档案"/>
                            <Button ToolTip="管理所有保存的档案。" Click="ButtonProfileManage_OnClick"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource MaterialDesignToolForegroundButton}"
                                    IsEnabled="{Binding ViewModel.IsOfflineEditor, Converter={StaticResource BooleanToBooleanReConverter}, Mode=OneWay}"
                                    Content="{materialDesign:PackIcon Menu, Size=16}"/>
                            
                        </StackPanel>
                    </Grid>
                </materialDesign:ColorZone>
                <!-- SnackBar -->
                <materialDesign:Snackbar Grid.Row="0" Grid.RowSpan="2" MessageQueue="{Binding ViewModel.MessageQueue}"/>
            </Grid>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>