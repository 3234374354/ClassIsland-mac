<controls:MyWindow x:Class="ClassIsland.Views.ExcelImportWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClassIsland.Views"
        xmlns:controls="clr-namespace:ClassIsland.Controls"
        xmlns:reoGrid="clr-namespace:unvell.ReoGrid;assembly=unvell.ReoGrid"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:ci="clr-namespace:ClassIsland"
        xmlns:models="clr-namespace:ClassIsland.Models"
        xmlns:windows="clr-namespace:Walterlv.Windows"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance local:ExcelImportWindow}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{StaticResource HarmonyOsSans}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="14"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"   
        Title="从表格导入课表" 
        WindowState="Maximized"
        Height="450" Width="800"
        AllowDrop="True"
        DragEnter="ProfileSettingsWindow_OnDragEnter"
        Drop="ProfileSettingsWindow_OnDrop">
    <controls:MyWindow.Resources>
        <Style TargetType="controls:WizardOptionControl">
            <Setter Property="InvokedCommand" Value="{x:Static local:ExcelImportWindow.NavigateCommand}"/>
        </Style>
        <Style TargetType="controls:WizardOptionsListBox">
            <Setter Property="InvokeCommand" Value="{x:Static local:ExcelImportWindow.NavigateCommand}"/>
        </Style>
        <!--<Style TargetType="materialDesign:TransitionerSlide">
            <Setter Property="BackwardWipe">
                <Setter.Value>
                    <materialDesign:SlideWipe Direction="Right"/>
                </Setter.Value>
            </Setter>
            <Setter Property="ForwardWipe">
                <Setter.Value>
                    <materialDesign:SlideWipe Direction="Left"/>
                </Setter.Value>
            </Setter>
        </Style>-->
        <Storyboard x:Key="EditingLoop" RepeatBehavior="Forever">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="0.25">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:02" Value="0.1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </controls:MyWindow.Resources>
    <controls:MyWindow.CommandBindings>
        <CommandBinding Command="{x:Static local:ExcelImportWindow.SelectionValueUpdateCommand}"
                        Executed="SelectionValueUpdateCommand_OnExecuted"/>
        <CommandBinding Command="{x:Static local:ExcelImportWindow.EnterSelectingModeCommand}"
                        Executed="EnterSelectingModeCommand_OnExecuted"/>
        <CommandBinding Command="{x:Static local:ExcelImportWindow.NavigateCommand}"
                        Executed="NavigateCommand_OnExecuted"/>
        <CommandBinding Command="{x:Static local:ExcelImportWindow.NavigateBackCommand}"
                        Executed="NavigateBackCommand_OnExecuted"/>
    </controls:MyWindow.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="ColumnDefinition">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ViewModel.IsFileSelected}" Value="False">
                                <Setter Property="Width" Value="0"/>
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Width" Value="*"/>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <ColumnDefinition>
                <ColumnDefinition.Style>
                    <Style TargetType="ColumnDefinition">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ViewModel.IsFileSelected}" Value="False">
                                <Setter Property="Width" Value="0"/>
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Width" Value="5"/>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
            <ColumnDefinition MinWidth="350">
                <ColumnDefinition.Style>
                    <Style TargetType="ColumnDefinition">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ViewModel.IsFileSelected}" Value="False">
                                <Setter Property="Width" Value="*"/>
                                <Setter Property="MaxWidth" Value="Infinity"/>
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Width" Value="500"/>
                        <Setter Property="MaxWidth" Value="800"/>
                    </Style>
                </ColumnDefinition.Style>
            </ColumnDefinition>
        </Grid.ColumnDefinitions>
        <!-- Header -->
        <materialDesign:ColorZone Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" Padding="16" Mode="PrimaryMid"
                                          materialDesign:ElevationAssist.Elevation="Dp4"
                                          Margin="0 0 0 4"
                                          Visibility="{Binding ViewModel.IsSelectingMode, Converter={StaticResource InverseBoolToVisConverter}}">
            <Grid Margin="4 0 4 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="1" Text="从表格导入课表" Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                                   HorizontalAlignment="Left"
                                   Margin="0 0 0 0"
                                   VerticalAlignment="Center"/>
            </Grid>
        </materialDesign:ColorZone>
        <!-- 选区模式 -->
        <materialDesign:ColorZone Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" Padding="16"
                                  Margin="0 0 0 4"
                                  materialDesign:ElevationAssist.Elevation="Dp4"
                                  Visibility="{Binding ViewModel.IsSelectingMode, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid Margin="4 0 4 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="border" Background="{DynamicResource PrimaryHueMidBrush}" Margin="-20 -16"
                        Opacity="0"
                        Grid.ColumnSpan="3"/>
                <TextBlock Grid.Column="1" Text="在下方表格中选择区域" Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                           HorizontalAlignment="Left"
                           Margin="0 0 0 0"
                           VerticalAlignment="Center"/>
                <StackPanel Grid.Column="2" 
                            Margin="0 -16"
                            Orientation="Horizontal">
                    <TextBlock Grid.Column="1" Text="{Binding ViewModel.SelectedRangePosition, Converter={StaticResource RangePositionToStringConverter}}" 
                               Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                               HorizontalAlignment="Left"
                               FontFamily="Consolas"
                               ToolTip="当前选区"
                               Margin="0 0 8 0"
                               VerticalAlignment="Center"/>
                    <Button Style="{StaticResource MaterialDesignIconForegroundButton}"
                            ToolTip="确定"
                            Content="{materialDesign:PackIcon Check}"
                            Click="ButtonExitSelectingMode_OnClick"/>
                </StackPanel>
            </Grid>
        </materialDesign:ColorZone>

        <reoGrid:ReoGridControl Grid.Row="1" Grid.Column="0" x:Name="Grid"
                                Readonly="False"
                                SheetTabNewButtonVisible="False"
                                SheetTabVisible="True"
                                CurrentWorksheetChanged="Grid_OnCurrentWorksheetChanged"
                                BeforeActionPerform="Grid_OnBeforeActionPerform">
            <reoGrid:ReoGridControl.Style>
                <Style TargetType="reoGrid:ReoGridControl">
                    <Style.Resources>
                        <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}"/>
                        <Style TargetType="ScrollBar" />
                        <Style TargetType="TextBlock" >
                            <Setter Property="Foreground" Value="Black"/>
                        </Style>
                    </Style.Resources>
                </Style>
            </reoGrid:ReoGridControl.Style>
            <reoGrid:ReoGridControl.CellsContextMenu>
                <ContextMenu FontFamily="{DynamicResource HarmonyOsSans}">
                    <MenuItem Icon="{materialDesign:PackIcon ContentCopy}" Header="复制" Click="MenuItemCopy_OnClick" InputGestureText="Ctrl+C"/>
                    <MenuItem Icon="{materialDesign:PackIcon ContentPaste}" Header="粘贴" Click="MenuItemPaste_OnClick" InputGestureText="Ctrl+V"/>
                    <MenuItem Icon="{materialDesign:PackIcon ContentCut}" Header="剪切" Click="MenuItemCut_OnClick" InputGestureText="Ctrl+X"/>
                    <MenuItem Icon="{materialDesign:PackIcon ClearOutline}" Header="清除内容" Click="MenuItemClearContent_OnClick" InputGestureText="Del"/>
                    <Separator/>
                    <MenuItem Icon="{materialDesign:PackIcon TableMergeCells}" Header="合并单元格" Click="MenuItemCellMerge_OnClick"/>
                    <MenuItem Icon="{materialDesign:PackIcon Cancel}" Header="取消单元格合并" Click="MenuItemCancelCellMerge_OnClick"/>
                </ContextMenu>
            </reoGrid:ReoGridControl.CellsContextMenu>
        </reoGrid:ReoGridControl>
        <GridSplitter Grid.Row="1" Grid.Column="1"
                      MaxWidth="500"
                      Width="10" HorizontalAlignment="Stretch"/>

        <!-- Wizard content -->
        <ScrollViewer Grid.Column="2" Grid.Row="1" VerticalScrollBarVisibility="Auto">
            <materialDesign:Transitioner Margin="8"
                                         ClipToBounds="False"
                                         SelectedIndex="{Binding ViewModel.SlideIndex, Mode=TwoWay}">
                <materialDesign:Transitioner.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Setter Property="Margin" Value="0 0 0 4"/>
                    </Style>
                </materialDesign:Transitioner.Resources>
                <!-- 0 选择文件 -->
                <materialDesign:TransitionerSlide ForwardWipe="{x:Null}" BackwardWipe="{x:Null}">
                    <StackPanel VerticalAlignment="Center"
                                HorizontalAlignment="Center">
                        <materialDesign:PackIcon Width="75" Height="75"
                                                 Kind="FileTableOutline"
                                                 HorizontalAlignment="Center" Margin="0 0 0 16"/>
                        <TextBlock Text="从表格导入课表" HorizontalAlignment="Center"
                                   FontSize="20" FontWeight="Bold"/>
                        <TextBlock Text="要开始导入，请将表格文件拖入到本窗口" HorizontalAlignment="Center"
                                   Margin="0 6 0 0"
                                   FontSize="14"/>
                        <TextBlock Text="或者" HorizontalAlignment="Center"
                                   Margin="0 2 0 0"
                                   FontSize="14"/>
                        <Button Style="{StaticResource MaterialDesignPaperButton}" Margin="0 6 0 0"
                                HorizontalAlignment="Center">
                            <controls:IconText Kind="FolderOutline" Text="浏览文件…"/>
                        </Button>
                    </StackPanel>
                </materialDesign:TransitionerSlide>
                <!-- 1 Loading -->
                <materialDesign:TransitionerSlide ForwardWipe="{x:Null}" BackwardWipe="{x:Null}">
                    <StackPanel VerticalAlignment="Center"
                                HorizontalAlignment="Center">
                        <Image Source="/Assets/纳西妲_沉思中.png" Width="85" Height="85"
                               ToolTip="纳西妲_沉思中"
                               RenderOptions.BitmapScalingMode="HighQuality"
                               HorizontalAlignment="Center" Margin="0 0 0 16"/>

                        <TextBlock Text="正在加载你的表格……" HorizontalAlignment="Center"
                                   FontSize="20"
                                   FontWeight="Bold"/>
                        <TextBlock Text="坐和放宽，滚回功率，加载马上就好！" HorizontalAlignment="Center"
                                   FontSize="13"
                                   TextDecorations="Strikethrough"/>
                    </StackPanel>
                </materialDesign:TransitionerSlide>
                <!-- 2 Welcome -->
                <materialDesign:TransitionerSlide>
                    <StackPanel>
                        <TextBlock Text="从表格导入课表" Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                                   Margin="0 0 0 12"/>
                        <TextBlock Text="欢迎使用从表格导入向导。本向导会引导您从Excel格式的表格中导入课表和时间表。"></TextBlock>
                        <StackPanel Orientation="Horizontal">
                            <Button Command="{x:Static materialDesign:Transitioner.MoveNextCommand}">
                                <controls:IconText Kind="ArrowRight" Text="开始"/>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </materialDesign:TransitionerSlide>
                <!-- 3 询问界面形式 -->
                <materialDesign:TransitionerSlide>
                    <StackPanel>
                        <TextBlock Text="您希望本向导如何引导您？" Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                                   Margin="0 0 0 12"/>
                        <TextBlock >
                            <Run Text="本向导提供详细和简洁两种语言风格。"/>
                        </TextBlock>
                        <TextBlock Text="选择一种适合您的语言风格，然后点击下一步继续。"/>

                        <controls:WizardOptionsListBox SelectedIndex="{Binding ViewModel.DescriptionMode}">
                            <models:WizardOption Header="详细" Content="对每个选项和流程做出详细解释，适用于刚接触本软件的新手。"
                                                 InvokeCommandParameter="TimeLayoutSource"/>
                            <models:WizardOption Header="简洁" Content="简化流程和语言说明，提供简洁的体验，适用于熟悉本软件的用户。"
                                                 InvokeCommandParameter="TimeLayoutSource"/>
                        </controls:WizardOptionsListBox>
                        <Button HorizontalAlignment="Left" Margin="0 8 0 0"
                                Style="{StaticResource MaterialDesignPaperButton}"
                                Command="{x:Static local:ExcelImportWindow.NavigateBackCommand}">
                            <controls:IconText Kind="ArrowLeft" Text="上一步"/>
                        </Button>
                    </StackPanel>
                </materialDesign:TransitionerSlide>
                <!-- 4 从哪里导入时间表？-->
                <materialDesign:TransitionerSlide>
                    <StackPanel>
                        <TextBlock Text="您希望从哪里导入时间表？" Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                                   Margin="0 0 0 12"/>
                        <TextBlock >
                            <Run Text="在创建课表之前，您至少需要一个时间表。时间表包含了一天的时间安排，告诉本软件什么时候上课和课间休息，并以此创建课表。"/>
                        </TextBlock>
                        <TextBlock Text="选择导入时间表的方式，然后点击下一步继续。"/>

                        <controls:WizardOptionsListBox SelectedIndex="{Binding ViewModel.TimeLayoutImportSource}">
                            <models:WizardOption Header="我的时间表在这个文件中" Content="将从本文件导入时间表。"
                                                 InvokeCommandParameter="ImportTimeLayoutFromThisFile"/>
                            <models:WizardOption Header="我的时间表另一个文件中" Content="将打开另一个表格，并从该表格导入时间表。"
                                                 InvokeCommandParameter="ImportTimeLayoutFromOtherFile"/>
                            <models:WizardOption Header="我想手动创建时间表" Content="手动创建时间表。"
                                                 InvokeCommandParameter="CreateTimeLayoutManually"/>
                        </controls:WizardOptionsListBox>
                        <Button HorizontalAlignment="Left" Margin="0 8 0 0"
                                Style="{StaticResource MaterialDesignPaperButton}"
                                Command="{x:Static local:ExcelImportWindow.NavigateBackCommand}">
                            <controls:IconText Kind="ArrowLeft" Text="上一步"/>
                        </Button>
                    </StackPanel>
                </materialDesign:TransitionerSlide>
                <!-- 5 选择时间安排区域 -->
                <materialDesign:TransitionerSlide>
                    <StackPanel>
                        <TextBlock Text="选择时间安排区域" Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                                   Margin="0 0 0 12"/>
                        <TextBlock >
                            
                            <Run Text="点击下方文本框以从表格中选择包含时间点安排信息的区域。"/>
                        </TextBlock>
                        <controls:ExcelSelectionTextBox Value="{Binding ViewModel.TimePointSourcePosition, Mode=TwoWay}"
                                                        IsSelecting="{Binding ViewModel.IsSelectingMode, Mode=TwoWay}"
                                                        EnterSelectingModeCommand="{x:Static local:ExcelImportWindow.EnterSelectingModeCommand}"
                                                        SelectionPropertyName="TimePointSourcePosition"
                                                        materialDesign:HintAssist.Hint="选择时间安排区域"/>
                        <controls:NavigationButtonsControl NavigationNextCommandParameter="TimePointImportResult"
                                                           IsEnabled="{Binding ViewModel.IsSelectingMode, Converter={StaticResource BooleanToBooleanReConverter}}">
                            <controls:NavigationButtonsControl.Style>
                                <Style TargetType="controls:NavigationButtonsControl" >
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ViewModel.TimePointSourcePosition}" Value="{x:Static reoGrid:RangePosition.Empty}">
                                            <Setter Property="IsNavigateNextButtonEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </controls:NavigationButtonsControl.Style>
                        </controls:NavigationButtonsControl>
                    </StackPanel>
                </materialDesign:TransitionerSlide>
                <!-- 6 手动创建时间表 -->
                <materialDesign:TransitionerSlide>
                    <StackPanel>
                        <TextBlock Text="手动创建时间表" Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                                   Margin="0 0 0 12"/>
                        <TextBlock >
                            <Run Text="已打开档案编辑窗口，请手动创建时间表。创建完毕请点击【下一步】按钮。"/>
                        </TextBlock>
                        <Button HorizontalAlignment="Left"
                                Margin="0 8 0 0"
                                Style="{StaticResource MaterialDesignFlatButton}">
                            <controls:IconText Kind="FileDocumentEditOutline" Text="打开档案编辑窗口"/>
                        </Button>
                        <controls:NavigationButtonsControl NavigationNextCommandParameter="SelectSubjectsPosition"/>
                    </StackPanel>
                </materialDesign:TransitionerSlide>
                <!-- 7 时间表导入结果 -->
                <materialDesign:TransitionerSlide>
                    <StackPanel>
                        <TextBlock Text="时间表导入结果" Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                                   Margin="0 0 0 12"/>
                        <TextBlock >
                            <Run Text=""/>
                        </TextBlock>
                        <TextBox Text="{Binding ViewModel.SelectedTimeLayout.Name}"
                                 Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                 materialDesign:HintAssist.Hint="时间表名称"/>
                        <ListBox ItemsSource="{Binding ViewModel.SelectedTimeLayout.Layouts}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock>
                                        <Run Text="{Binding StartSecond, StringFormat={}{0:HH:mm:ss}}"/>
                                        <Run Text="-"/>
                                        <Run Text="{Binding EndSecond, StringFormat={}{0:HH:mm:ss}}"/>
                                    </TextBlock>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <WrapPanel>
                            <Button Style="{StaticResource MaterialDesignFlatButton}"
                                    Content="刷新"
                                    HorizontalAlignment="Left"
                                    Click="ButtonRefreshTimeLayout_OnClick" />
                            <Button Style="{StaticResource MaterialDesignFlatButton}"
                                    Content="编辑"
                                    HorizontalAlignment="Left"
                                    Click="ButtonRefreshTimeLayout_OnClick" />
                        </WrapPanel>
                        <controls:NavigationButtonsControl NavigationNextCommandParameter="SelectSubjectsPosition"/>
                    </StackPanel>
                </materialDesign:TransitionerSlide>
                <!-- 8 选择课程区域 -->
                <materialDesign:TransitionerSlide>
                    <StackPanel>
                        <TextBlock Text="选择课程区域" Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                                   Margin="0 0 0 12"/>
                        <TextBlock >
                            <Run Text="点击下方文本框以从表格中选择包含课程的区域。"/>
                        </TextBlock>
                        <controls:ExcelSelectionTextBox Value="{Binding ViewModel.SubjectSourcePosition, Mode=TwoWay}"
                                                        IsSelecting="{Binding ViewModel.IsSelectingMode, Mode=TwoWay}"
                                                        EnterSelectingModeCommand="{x:Static local:ExcelImportWindow.EnterSelectingModeCommand}"
                                                        SelectionPropertyName="SubjectSourcePosition"
                                                        materialDesign:HintAssist.Hint="选择课程区域"/>
                        <controls:NavigationButtonsControl NavigationNextCommandParameter="RowClassesTimeRelationshipImportMethod"
                                                           IsEnabled="{Binding ViewModel.IsSelectingMode, Converter={StaticResource BooleanToBooleanReConverter}}"/>
                    </StackPanel>
                </materialDesign:TransitionerSlide>
                <!-- 9 选择行列对应关系 -->
                <materialDesign:TransitionerSlide>
                    <StackPanel>
                        <TextBlock Text="选择行列对应关系" Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                                   Margin="0 0 0 12"/>
                        <TextBlock >
                            <Run Text=""/>
                        </TextBlock>
                        
                    </StackPanel>
                </materialDesign:TransitionerSlide>
                <!-- 10 如何导入时间对应关系？ -->
                <materialDesign:TransitionerSlide>
                    <StackPanel>
                        <TextBlock Text="如何导入时间对应关系？" Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                                   Margin="0 0 0 12"/>
                        <TextBlock >
                            <Run Text=""/>
                        </TextBlock>
                        <controls:WizardOptionsListBox SelectedIndex="{Binding ViewModel.TimeLayoutImportSource}">
                            <models:WizardOption Header="自动识别" Content=""
                                                 InvokeCommandParameter="RowClassesTimeRelationshipImportAuto"/>
                            <models:WizardOption Header="手动指定" Content=""
                                                 InvokeCommandParameter="RowClassesTimeRelationshipImportMan"/>
                        </controls:WizardOptionsListBox>
                    </StackPanel>
                </materialDesign:TransitionerSlide>
                <!-- 11 时间对应关系 -->
                <materialDesign:TransitionerSlide>
                    <StackPanel>
                        <TextBlock Text="时间对应关系" Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                                   Margin="0 0 0 12"/>
                        <TextBlock >
                            <Run Text=""/>
                        </TextBlock>

                    </StackPanel>
                </materialDesign:TransitionerSlide>
                <!-- 12 选择创建课表的区域 -->
                <materialDesign:TransitionerSlide>
                    <StackPanel>
                        <TextBlock Text="选择创建课表的区域" Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                                   Margin="0 0 0 12"/>
                        <TextBlock >
                            <Run Text=""/>
                        </TextBlock>
                        <ListBox ItemsSource="{Binding ViewModel.ClassPlanSources}">

                        </ListBox>
                    </StackPanel>
                </materialDesign:TransitionerSlide>
                <!-- 13 课表导入结果 -->
                <materialDesign:TransitionerSlide>
                    <StackPanel>
                        <TextBlock Text="课表导入结果" Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                                   Margin="0 0 0 12"/>
                        <TextBlock >
                            <Run Text=""/>
                        </TextBlock>

                    </StackPanel>
                </materialDesign:TransitionerSlide>
                <!-- 14 已导入的课表 -->
                <materialDesign:TransitionerSlide>
                    <StackPanel>
                        <TextBlock Text="已导入的课表" Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                                   Margin="0 0 0 12"/>
                        <TextBlock >
                            <Run Text=""/>
                        </TextBlock>

                    </StackPanel>
                </materialDesign:TransitionerSlide>
                <!-- 15 完成 -->
                <materialDesign:TransitionerSlide>
                    <StackPanel>
                        <TextBlock Text="完成" Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                                   Margin="0 0 0 12"/>
                        <TextBlock >
                            <Run Text=""/>
                        </TextBlock>

                    </StackPanel>
                </materialDesign:TransitionerSlide>
            </materialDesign:Transitioner>
        </ScrollViewer>

        <!-- Debug slider -->
        <Slider Grid.Column="2" Grid.Row="1" AutoToolTipPlacement="TopLeft"
                ToolTip="debug purpose only."
                VerticalAlignment="Bottom"
                HorizontalAlignment="Right"
                Width="150"
                Minimum="0"
                Maximum="15"
                Value="{Binding ViewModel.SlideIndex}"/>
        <CheckBox Grid.Column="0" Grid.Row="1"
                  Content="IsSelectingMode"
                  VerticalAlignment="Bottom"
                  HorizontalAlignment="Center"
                  IsChecked="{Binding ViewModel.IsSelectingMode}"/>

        <windows:AsyncBox Grid.Row="0" Grid.Column="0"
                          Grid.RowSpan="2" Grid.ColumnSpan="3"
                          VerticalAlignment="Bottom" Height="8" LoadingViewType="controls:LoadingMask"/>
    </Grid>
</controls:MyWindow>
