<Window x:Class="ClassIsland.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClassIsland"
        mc:Ignorable="d"
        Title="ClassIsland"
        Height="40"
        Width="800"
        SnapsToDevicePixels="True"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:controls="clr-namespace:ClassIsland.Controls"
        xmlns:ci="http://classisland.tech/schemas/xaml/core"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="{Binding ViewModel.Settings.MainWindowFontWeight2, Converter={StaticResource IntToFontWeightConverter}}"
        TextElement.FontSize="14"
        d:DataContext="{d:DesignInstance local:MainWindow}"
        FontFamily="{Binding ViewModel.Settings.MainWindowFont, Mode=OneWay}"
        ResizeMode="NoResize"
        MouseDown="MainWindow_OnPreviewMouseDown"
        ShowInTaskbar="False"
        WindowStyle="None"
        d:Width="600"
        Closing="MainWindow_OnClosing"
        SizeChanged="MainWindow_OnSizeChanged"
        Activated="MainWindow_OnActivated"
        StateChanged="MainWindow_OnStateChanged"
        Icon="/Assets/AppLogo.ico"
        Loaded="MainWindow_OnLoaded"
        SizeToContent="Height"
        ShowActivated="False"
        materialDesign:ShadowAssist.CacheMode="{x:Null}">
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:MainWindow.TrayIconLeftClickedCommand}"
                        Executed="TrayIconOnClicked_OnExecuted" />
    </Window.CommandBindings>
    <Window.Resources>
        <CollectionViewSource x:Key="ComponentsCollectionViewSource"
                              Source="{Binding ComponentsService.CurrentComponents}"
                              IsLiveGroupingRequested="True"
                              IsLiveSortingRequested="True">
            <!--<CollectionViewSource.LiveSortingProperties>
                <system:String>RelativeLineNumber</system:String>
            </CollectionViewSource.LiveSortingProperties>
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="RelativeLineNumber"/>
            </CollectionViewSource.SortDescriptions>-->
            <CollectionViewSource.LiveFilteringProperties>
                <system:String>RelativeLineNumber</system:String>
            </CollectionViewSource.LiveFilteringProperties>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="RelativeLineNumber" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        <!--#region StoryBoards-->

        <!--#endregion 1-->
    </Window.Resources>
    <Window.Style>
        <Style TargetType="Window">
            <Style.Triggers>
                <!-- Debug -->
                <DataTrigger Binding="{Binding ViewModel.Settings.IsMainWindowDebugEnabled, Mode=OneWay}" Value="True">
                    <Setter Property="Background" Value="#2FAA0000" />
                </DataTrigger>
            </Style.Triggers>
            <!-- 默认状态 -->
            <Setter Property="Topmost" Value="False" />
            <Setter Property="Background" Value="{x:Null}" />
        </Style>
    </Window.Style>
    <Grid>
        <!-- ROOT -->
        <Grid ClipToBounds="True"
              IsHitTestVisible="{Binding ViewModel.Settings.IsMouseClickingEnabled, Mode=OneWay}"
              VerticalAlignment="Top"
              HorizontalAlignment="Stretch"
              x:Name="GridRoot"
              SnapsToDevicePixels="False"
              RenderTransformOrigin="0,0">
            <Grid.LayoutTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="{Binding ViewModel.Settings.Scale, Mode=OneWay}"
                                    ScaleY="{Binding ViewModel.Settings.Scale, Mode=OneWay}" />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Grid.LayoutTransform>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <!-- 显示提醒时置顶窗口 -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding ViewModel.IsNotificationWindowExplicitShowed, Mode=OneWay}"
                                    Value="True" />
                                <Condition Binding="{Binding ViewModel.IsOverlayOpened, Mode=OneWay}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility"
                                    Value="{Binding ViewModel.Settings.IsMainWindowVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </MultiDataTrigger>
                        <!-- 窗口上课隐藏 -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ViewModel.Settings.HideMode, Mode=OneWay}"
                                           Value="0" />
                                <Condition Binding="{Binding ViewModel.Settings.HideOnClass, Mode=OneWay}" Value="True" />
                                <Condition Binding="{Binding LessonsService.CurrentState, Mode=OneWay}" Value="OnClass" />
                                <Condition
                                    Binding="{Binding ViewModel.IsNotificationWindowExplicitShowed, Mode=OneWay}"
                                    Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <!-- 窗口最大化隐藏 -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ViewModel.Settings.HideMode, Mode=OneWay}"
                                           Value="0" />
                                <Condition Binding="{Binding ViewModel.Settings.HideOnMaxWindow, Mode=OneWay}"
                                           Value="True" />
                                <Condition Binding="{Binding ViewModel.IsForegroundMaxWindow, Mode=OneWay}"
                                           Value="True" />
                                <Condition
                                    Binding="{Binding ViewModel.IsNotificationWindowExplicitShowed, Mode=OneWay}"
                                    Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <!-- 窗口全屏隐藏 -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ViewModel.Settings.HideMode, Mode=OneWay}"
                                           Value="0" />
                                <Condition Binding="{Binding ViewModel.Settings.HideOnFullscreen, Mode=OneWay}"
                                           Value="True" />
                                <Condition Binding="{Binding ViewModel.IsForegroundFullscreen, Mode=OneWay}"
                                           Value="True" />
                                <Condition
                                    Binding="{Binding ViewModel.IsNotificationWindowExplicitShowed, Mode=OneWay}"
                                    Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <!-- 窗口条件隐藏 -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ViewModel.Settings.HideMode, Mode=OneWay}"
                                           Value="1" />
                                <Condition Binding="{Binding ViewModel.IsHideRuleSatisfied, Mode=OneWay}"
                                           Value="True" />
                                <Condition
                                    Binding="{Binding ViewModel.IsNotificationWindowExplicitShowed, Mode=OneWay}"
                                    Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>

                    </Style.Triggers>

                    <Setter Property="Visibility"
                            Value="{Binding ViewModel.Settings.IsMainWindowVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Style>
            </Grid.Style>
            <Grid.Effect>
                <DropShadowEffect BlurRadius="8" Direction="0"
                                  ShadowDepth="0" Opacity="0"
                                  x:Name="RootDropShadowEffect"
                                  Color="Black" />
            </Grid.Effect>

            <Border ClipToBounds="True"
                    x:Name="ResourceLoaderBorder"
                    TextElement.FontSize="{DynamicResource MainWindowBodyFontSize}">
                <Border.Resources>

                </Border.Resources>
                <Grid>
                    <ItemsControl Grid.Column="0"
                                  ItemsSource="{Binding Source={StaticResource ComponentsCollectionViewSource}}"
                                  VerticalContentAlignment="Stretch"
                                  HorizontalContentAlignment="Stretch">
                        <ItemsControl.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.Panel>
                                    <ItemsPanelTemplate>
                                        <StackPanel IsItemsHost="True" />
                                    </ItemsPanelTemplate>
                                </GroupStyle.Panel>
                                <GroupStyle.ContainerStyle>
                                    <Style TargetType="{x:Type GroupItem}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                                    <controls:MainWindowLine
                                                        WindowDockingLocation="{Binding ViewModel.Settings.WindowDockingLocation, Mode=OneWay, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                                        LastStoryboardName="{Binding ViewModel.LastStoryboardName, Mode=OneWay, RelativeSource={RelativeSource AncestorType=local:MainWindow}}"
                                                        IsMainLine="{Binding Converter={StaticResource MainWindowIsMainLineConverter}, ConverterParameter={StaticResource ComponentsCollectionViewSource}}"
                                                        LineNumber="{Binding Name}"
                                                        IsOverlayOpen="{Binding ViewModel.IsOverlayOpened, Mode=OneWay, RelativeSource={RelativeSource AncestorType=local:MainWindow}}">
                                                        <ItemsPresenter />
                                                    </controls:MainWindowLine>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GroupStyle.ContainerStyle>
                            </GroupStyle>
                        </ItemsControl.GroupStyle>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ci:ComponentPresenter IsOnMainWindow="True"
                                                           IsRootComponent="True"
                                                           Settings="{Binding}"
                                                           HidingRules="{Binding HidingRules, Mode=OneWay}"
                                                           HideOnRule="{Binding HideOnRule, Mode=OneWay}"
                                                           Margin="6 0" />
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>

            </Border>

            <!--<hc:NotifyIcon ContextMenu="{StaticResource AppContextMenu}" Text="ClassIsland" Icon="/Assets/AppLogo.ico"/>-->
            <!--<tb:TaskbarIcon ContextMenu="{StaticResource AppConteGriddu}"
                        DataContext="{Binding}"
                        x:Name="MyTaskBarIcon"
                        IconSource="/Assets/AppLogo.ico"
                        MenuActivation="LeftOrRightClick"
                        ToolTipText="ClassIsland"
                        ToolTip="ClassIsland">
            </tb:TaskbarIcon>-->

            <!-- Content -->

        </Grid>

        <!-- Scale debug -->
        <TextBlock Foreground="Cyan"
                   d:Visibility="Collapsed"
                   Visibility="{Binding ViewModel.Settings.IsMainWindowDebugEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Run Text="GridRoot:" />
            <Run Text="{Binding ActualWidth, ElementName=GridRoot, Mode=OneWay, StringFormat={}{0:f1}}" />
            <Run Text="{Binding ActualHeight, ElementName=GridRoot, Mode=OneWay, StringFormat={}{0:f1}}" />
            <LineBreak />
            <Run Text="CurrentTime:" />
            <Run Text="{Binding ViewModel.DebugCurrentTime, ConverterCulture=zh-CN}" />
        </TextBlock>
        <TextBlock Foreground="Cyan"
                   HorizontalAlignment="Right"
                   d:Visibility="Collapsed"
                   Visibility="{Binding ViewModel.Settings.IsMainWindowDebugEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Run Text="{x:Static local:App.AppVersionLong}" />
        </TextBlock>

        <!-- Reserved transforms -->
        <Grid.RenderTransform>
            <TransformGroup>
                <TranslateTransform />
                <ScaleTransform />
                <RotateTransform />
                <MatrixTransform />
            </TransformGroup>
        </Grid.RenderTransform>
    </Grid>
</Window>